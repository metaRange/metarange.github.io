.drawflow,
.drawflow .parent-node {
    position: relative;
    margin: 0
}

.parent-drawflow {
    display: flex;
    overflow: hidden;
    touch-action: none;
    outline: 0;
    position: relative;
}

.drawflow {
    width: 100%;
    height: 100%;
    user-select: none;
    perspective: 0;
}

.drawflow .drawflow-node {
    display: flex;
    position: absolute;
    min-width: 160px;
    min-height: 40px;
    border-radius: 4px;
    color: #000;
    z-index: 2;
    padding: 0;
}

.drawflow .drawflow-node:hover {
    cursor: move
}

.drawflow .drawflow-node .inputs,
.drawflow .drawflow-node .outputs {
    width: 0
}

.drawflow .drawflow-node .drawflow_content_node {
    width: 100%;
    display: block
}

.drawflow .drawflow-node .input,
.drawflow .drawflow-node .output {
    position: relative;
    width: 20px;
    height: 20px;
    background: #fff;
    border-radius: 50%;
    border: 2px solid #000;
    cursor: crosshair;
    z-index: 1;
    margin-bottom: 5px
}

.drawflow .drawflow-node .input {
    left: -27px;
    top: 2px;
}

.drawflow .drawflow-node .output {
    right: -3px;
    top: 2px
}

.drawflow svg {
    z-index: 0;
    position: absolute;
    overflow: visible !important
}

.drawflow .connection {
    position: absolute;
    pointer-events: none;
    aspect-ratio: 1/1;
    margin: 0
}

.drawflow .connection .main-path {
    fill: none;
    stroke-width: 5px;
    pointer-events: all
}

.drawflow .connection .main-path:hover {
    stroke: #1266ab;
    cursor: pointer
}

.drawflow .connection .main-path.selected {
    stroke: #43b993
}

.drawflow .connection .point {
    cursor: move;
    stroke: #000;
    stroke-width: 2;
    fill: #fff;
    pointer-events: all
}

.drawflow .connection .point.selected,
.drawflow .connection .point:hover {
    fill: #1266ab
}

.drawflow .main-path {
    fill: none;
    stroke-width: 5px;
    stroke: #4682b4
}

.drawflow-delete {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    width: calc(var(--sl-line-height)*var(--sl-text-code));
    height: calc(var(--sl-line-height)*var(--sl-text-code));
    background:var(--sl--color-black);
    color: #fff;
    z-index: 4;
    border: 2px solid var(--sl-color-white);
    font-weight: 700;
    text-align: center;
    border-radius: 0px;
    font-family: monospace;
    cursor: pointer
}

.drawflow>.drawflow-delete {
    margin-left: -15px;
    margin-top: 15px
}

.parent-node .drawflow-delete {
    right: 0px;
    top: 0px
}

:root {
    --dfNodeType: flex;
    --dfNodeTypeFloat: none;
    --dfNodeBackgroundColor: rgba(159, 134, 100, 1);
    --dfNodeTextColor: #000000;
    --dfNodeMinHeight: 40px;
    --dfNodeMinWidth: 160px;
    --dfNodeBoxShadowHL: 0px;
    --dfNodeBoxShadowVL: 2px;
    --dfNodeBoxShadowBR: 3px;
    --dfNodeBoxShadowS: 2px;
    --dfNodeBoxShadowColor: rgba(0, 0, 0, 0.2);
    --dfNodeHoverBackgroundColor: #a39075;
    --dfNodeHoverBoxShadowHL: 0px;
    --dfNodeHoverBoxShadowVL: 2px;
    --dfNodeHoverBoxShadowBR: 3px;
    --dfNodeHoverBoxShadowS: 2px;
    --dfNodeHoverBoxShadowColor: rgba(0, 0, 0, 0.4);
    --dfNodeSelectedBackgroundColor: #a39075;
    --dfNodeTextWhite: #ffffff;
    --dfNodeSelectedBoxShadowHL: 0px;
    --dfNodeSelectedBoxShadowVL: 2px;
    --dfNodeSelectedBoxShadowBR: 3px;
    --dfNodeSelectedBoxShadowS: 2px;
    --dfNodeSelectedBoxShadowColor: rgba(0, 0, 0, 0.4);
    --dfBorderColor : #3a3836;
    --dfInputBackgroundColor: #ddd;
    --dfInputBorderSize: 2px;
    --dfInputBorderRadius: 50px;
    --dfInputLeft: -10px;
    --dfInputHeight: 20px;
    --dfInputWidth: 20px;
    --dfInputHoverBorderSize: 2px;
    --dfInputHoverBorderRadius: 50px;
    --dfOutputBackgroundColor: #ddd;
    --dfOutputBorderSize: 2px;
    --dfOutputRight: 10px;
    --dfOutputHeight: 20px;
    --dfOutputWidth: 20px;
    --dfOutputHoverBorderSize: 2px;
    --dfOutputHoverBorderRadius: 50px;
    --dfLineWidth: 5px;
    --dfLineColor: var(--sl-color-gray-3);
    --dfLineHoverColor: #4682b4;
    --dfLineSelectedColor: #43b993;
    --dfRerouteBorderWidth: 2px;
    --dfRerouteHoverBorderWidth: 2px;
    --dfDeleteDisplay: block;
    --dfDeleteBorderSize: 1px;
    --dfDeleteBorderRadius: 0px;
    --dfDeleteHoverBorderSize: 2px;
    --dfDeleteHoverBorderRadius: 0px;
    --dfDeleteBackgroundColor: rgba(0, 0, 0, 0.5);
    --df-color-gray-4: #282a2e;
    --df-color-gray-3: #5e6268;
}

#drawflow {
  background-color: var(--sl-color-gray-5);
  background-image: radial-gradient(var(--sl-color-gray-4) 1px, transparent 2px);
  background-size: 50px 50px;
  isolation: isolate;
}

#drawflow::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  mask-image: radial-gradient(circle, black 1px, transparent 2px);
  mask-size: 50px 50px;
  -webkit-mask-image: radial-gradient(circle, black 1px, transparent 2px);
  -webkit-mask-size: 50px 50px;
  mix-blend-mode: lighten;
  background: linear-gradient(-0.2turn, transparent 45%, white 50%, transparent 55%);
  background-size: 200% 100%;
  animation: move-highlight 15s linear infinite;
}
@keyframes move-highlight {
  from {
    background-position: 200% 0;
  }
  to {
    background-position: -200% 0;
  }
}
@media (prefers-reduced-motion: reduce) {
  #drawflow::before {
    animation: none;
  }
}
.drawflow .drawflow-node {
    display: var(--dfNodeType);
    background: var(--dfNodeBackgroundColor);
    min-height: var(--dfNodeMinHeight);
    width: auto;
    min-width: var(--dfNodeMinWidth);
    -webkit-box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
    box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
    border: 1px solid var(--dfBorderColor);
    border-radius: 0.5rem;
}

.drawflow .drawflow-node:hover {
    background: var(--dfNodeHoverBackgroundColor);
    color: var(--dfNodeTextColor);
    border: 1px solid var(--dfBorderColor);
    border-radius: 0.5rem;
    -webkit-box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
    box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
}

.drawflow .drawflow-node.selected {
    background: var(--dfNodeSelectedBackgroundColor);
    color: var(--dfNodeTextWhite);
    border: 1px solid var(--dfBorderColor);
    border-radius: 0.5rem;
    -webkit-box-shadow: var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
    box-shadow: var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
}

.drawflow .drawflow-node .input {
    left: var(--dfInputLeft);
    background: var(--dfInputBackgroundColor);
    border: var(--dfInputBorderSize) solid var(--dfBorderColor);
    border-radius: var(--dfInputBorderRadius);
    height: var(--dfInputHeight);
    width: var(--dfInputWidth);
}

.drawflow .drawflow-node .input:hover {
    background: var(--dfNodeTextWhite);
    border: var(--dfInputHoverBorderSize) solid var(--dfBorderColor);
    border-radius: var(--dfInputHoverBorderRadius);
}

.drawflow .drawflow-node .outputs {
    float: var(--dfNodeTypeFloat);
}

.drawflow .drawflow-node .output {
    right: var(--dfOutputRight);
    background: var(--dfOutputBackgroundColor);
    border: var(--dfOutputBorderSize) solid var(--dfBorderColor);
    height: var(--dfOutputHeight);
    width: var(--dfOutputWidth);
}

.drawflow .drawflow-node .output:hover {
    background: var(--dfNodeTextWhite);
    border: var(--dfOutputHoverBorderSize) solid var(--dfBorderColor);
    border-radius: var(--dfOutputHoverBorderRadius);
}

.drawflow .connection .main-path {
    stroke-width: var(--dfLineWidth);
    stroke: var(--dfLineColor);
}

.drawflow .connection .main-path:hover {
    stroke: var(--dfLineHoverColor);
}

.drawflow .connection .main-path.selected {
    stroke: var(--dfLineSelectedColor);
}

.drawflow .connection .point {
    stroke: var(--dfNodeTextColor);
    stroke-width: var(--dfRerouteBorderWidth);
    fill: var(--dfNodeTextWhite);
}

.drawflow .connection .point:hover {
    stroke: var(--dfNodeTextColor);
    stroke-width: var(--dfRerouteHoverBorderWidth);
    fill: var(--dfNodeTextWhite);
}

.drawflow-delete {
    color: var(--dfNodeTextWhite);
    background: var(--dfBorderColor);
    border: var(--dfDeleteBorderSize) solid var(--dfBorderColor);
    border-radius: var(--dfDeleteBorderRadius) 0.3rem var(--dfDeleteBorderRadius) var(--dfDeleteBorderRadius);
}

.drawflow-delete:hover {
    color: var(--dfNodeTextColor);
    background: var(--dfNodeTextWhite);
    border: var(--dfDeleteHoverBorderSize) solid var(--dfBorderColor);
}